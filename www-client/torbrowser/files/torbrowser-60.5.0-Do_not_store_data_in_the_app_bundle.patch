From 0e4105afea7b10cf20ab20cb41b187d7d690ff46 Mon Sep 17 00:00:00 2001
From: Poncho <poncho@spahan.ch>
Date: Wed, 30 Jan 2019 09:55:25 +0100
Subject: [PATCH 1/4] Revert "Bug 13252: Do not store data in the app bundle"

This reverts commit 2ee4d81a2fbcac90996f4f4a99633a0b2d7019bb.
---
 toolkit/xre/nsXREDirProvider.cpp       | 43 ++++++++++++---------
 toolkit/xre/nsXREDirProvider.h         |  6 ---
 xpcom/io/nsAppFileLocationProvider.cpp | 53 +++++++++++++++-----------
 3 files changed, 55 insertions(+), 47 deletions(-)

diff --git a/toolkit/xre/nsXREDirProvider.cpp b/toolkit/xre/nsXREDirProvider.cpp
index d811da50b63d..dbbaffd2a15f 100644
--- a/toolkit/xre/nsXREDirProvider.cpp
+++ b/toolkit/xre/nsXREDirProvider.cpp
@@ -44,8 +44,6 @@
 #include "mozilla/Preferences.h"
 #include "mozilla/Telemetry.h"
 
-#include "TorFileUtils.h"
-
 #include <stdlib.h>
 
 #ifdef XP_WIN
@@ -1337,18 +1335,34 @@ nsresult nsXREDirProvider::GetUserDataDirectoryHome(nsIFile** aFile,
   NS_ENSURE_ARG_POINTER(aFile);
   nsCOMPtr<nsIFile> localDir;
 
-  nsresult rv = GetTorBrowserUserDataDir(getter_AddRefs(localDir));
+  nsresult rv = GetAppDir()->Clone(getter_AddRefs(localDir));
   NS_ENSURE_SUCCESS(rv, rv);
 
-#if !defined(ANDROID)
-#ifdef TOR_BROWSER_DATA_OUTSIDE_APP_DIR
-  rv = localDir->AppendNative(NS_LITERAL_CSTRING("Browser"));
-#else
-  rv = localDir->AppendRelativeNativePath(
-      NS_LITERAL_CSTRING("Data" XPCOM_FILE_PATH_SEPARATOR "Browser"));
+  int levelsToRemove = 1;  // In FF21+, appDir points to browser subdirectory.
+#if defined(XP_MACOSX)
+  levelsToRemove += 2;
 #endif
+  while (localDir && (levelsToRemove > 0)) {
+    // When crawling up the hierarchy, components named "." do not count.
+    nsAutoCString removedName;
+    rv = localDir->GetNativeLeafName(removedName);
+    NS_ENSURE_SUCCESS(rv, rv);
+    bool didRemove = !removedName.Equals(".");
+
+    // Remove a directory component.
+    nsCOMPtr<nsIFile> parentDir;
+    rv = localDir->GetParent(getter_AddRefs(parentDir));
+    NS_ENSURE_SUCCESS(rv, rv);
+    localDir = parentDir;
+    if (didRemove) --levelsToRemove;
+  }
+
+  if (!localDir) return NS_ERROR_FAILURE;
+
+  rv = localDir->AppendRelativeNativePath(
+      NS_LITERAL_CSTRING("TorBrowser" XPCOM_FILE_PATH_SEPARATOR
+                         "Data" XPCOM_FILE_PATH_SEPARATOR "Browser"));
   NS_ENSURE_SUCCESS(rv, rv);
-#endif
 
   if (aLocal) {
     rv = localDir->AppendNative(NS_LITERAL_CSTRING("Caches"));
@@ -1433,15 +1447,6 @@ nsresult nsXREDirProvider::GetUserDataDirectory(nsIFile** aFile, bool aLocal) {
   return NS_OK;
 }
 
-nsresult nsXREDirProvider::GetTorBrowserUserDataDir(nsIFile** aFile) {
-  NS_ENSURE_ARG_POINTER(aFile);
-  nsCOMPtr<nsIFile> exeFile;
-  bool per = false;
-  nsresult rv = GetFile(XRE_EXECUTABLE_FILE, &per, getter_AddRefs(exeFile));
-  NS_ENSURE_SUCCESS(rv, rv);
-  return TorBrowser_GetUserDataDir(exeFile, aFile);
-}
-
 nsresult nsXREDirProvider::EnsureDirectoryExists(nsIFile* aDirectory) {
   bool exists;
   nsresult rv = aDirectory->Exists(&exists);
diff --git a/toolkit/xre/nsXREDirProvider.h b/toolkit/xre/nsXREDirProvider.h
index 6fe9d9ecbce5..6b92f3812882 100644
--- a/toolkit/xre/nsXREDirProvider.h
+++ b/toolkit/xre/nsXREDirProvider.h
@@ -87,12 +87,6 @@ class nsXREDirProvider final : public nsIDirectoryServiceProvider2,
    */
   nsresult GetProfileDir(nsIFile** aResult);
 
-  /**
-   * Get the TorBrowser user data directory by calling the
-   * TorBrowser_GetUserDataDir() utility function.
-   */
-  nsresult GetTorBrowserUserDataDir(nsIFile** aFile);
-
  protected:
   nsresult GetFilesInternal(const char* aProperty,
                             nsISimpleEnumerator** aResult);
diff --git a/xpcom/io/nsAppFileLocationProvider.cpp b/xpcom/io/nsAppFileLocationProvider.cpp
index 3906c6590090..2aa5482f5789 100644
--- a/xpcom/io/nsAppFileLocationProvider.cpp
+++ b/xpcom/io/nsAppFileLocationProvider.cpp
@@ -27,8 +27,6 @@
 #include <sys/param.h>
 #endif
 
-#include "TorFileUtils.h"
-
 // WARNING: These hard coded names need to go away. They need to
 // come from localizable resources
 
@@ -250,14 +248,8 @@ nsresult nsAppFileLocationProvider::CloneMozBinDirectory(nsIFile** aLocalFile) {
 // GetProductDirectory - Gets the directory which contains the application data
 // folder
 //
-#ifdef TOR_BROWSER_DATA_OUTSIDE_APP_DIR
-// UNIX and WIN   : <App Folder>/../TorBrowser-Data/Browser
-// Mac            : <App Folder>/../../../TorBrowser-Data/Browser OR
-//                  ~/Library/Application Support/TorBrowser-Data/Browser
-#else
 // UNIX and WIN   : <App Folder>/TorBrowser/Data/Browser
 // Mac            : <App Folder>/../../TorBrowser/Data/Browser
-#endif
 //----------------------------------------------------------------------------------------
 nsresult nsAppFileLocationProvider::GetProductDirectory(nsIFile** aLocalFile,
                                                         bool aLocal) {
@@ -265,25 +257,42 @@ nsresult nsAppFileLocationProvider::GetProductDirectory(nsIFile** aLocalFile,
     return NS_ERROR_INVALID_ARG;
   }
 
-  nsresult rv = NS_ERROR_UNEXPECTED;
+  nsresult rv;
   bool exists;
-  nsCOMPtr<nsIFile> localDir, exeFile;
+  nsCOMPtr<nsIFile> localDir;
 
-  nsCOMPtr<nsIProperties> directoryService(
-      do_GetService(NS_DIRECTORY_SERVICE_CONTRACTID, &rv));
-  NS_ENSURE_SUCCESS(rv, rv);
-  rv = directoryService->Get(XRE_EXECUTABLE_FILE, NS_GET_IID(nsIFile),
-                             getter_AddRefs(exeFile));
-  NS_ENSURE_SUCCESS(rv, rv);
-  rv = TorBrowser_GetUserDataDir(exeFile, getter_AddRefs(localDir));
+  rv = CloneMozBinDirectory(getter_AddRefs(localDir));
   NS_ENSURE_SUCCESS(rv, rv);
 
-#ifdef TOR_BROWSER_DATA_OUTSIDE_APP_DIR
-  rv = localDir->AppendNative(NS_LITERAL_CSTRING("Browser"));
-#else
-  rv = localDir->AppendRelativeNativePath(
-      NS_LITERAL_CSTRING("Data" XPCOM_FILE_PATH_SEPARATOR "Browser"));
+  int levelsToRemove = 1;  // In FF21+, bin dir points to browser subdirectory.
+#if defined(XP_MACOSX)
+  levelsToRemove += 2;
 #endif
+  while (localDir && (levelsToRemove > 0)) {
+    // When crawling up the hierarchy, components named "." do not count.
+    nsAutoCString removedName;
+    rv = localDir->GetNativeLeafName(removedName);
+    NS_ENSURE_SUCCESS(rv, rv);
+    bool didRemove = !removedName.Equals(".");
+
+    // Remove a directory component.
+    nsCOMPtr<nsIFile> parentDir;
+    rv = localDir->GetParent(getter_AddRefs(parentDir));
+    NS_ENSURE_SUCCESS(rv, rv);
+    localDir = parentDir;
+
+    if (didRemove) {
+      --levelsToRemove;
+    }
+  }
+
+  if (!localDir) {
+    return NS_ERROR_FAILURE;
+  }
+
+  rv = localDir->AppendRelativeNativePath(
+      NS_LITERAL_CSTRING("TorBrowser" XPCOM_FILE_PATH_SEPARATOR
+                         "Data" XPCOM_FILE_PATH_SEPARATOR "Browser"));
   NS_ENSURE_SUCCESS(rv, rv);
 
   if (aLocal) {
-- 
2.19.2

